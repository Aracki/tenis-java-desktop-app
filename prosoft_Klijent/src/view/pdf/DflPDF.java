/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.pdf;

import com.pdfjet.*;
import domen.Takmicar;
import java.io.BufferedReader;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Raca420
 */
public class DflPDF extends javax.swing.JDialog {

    private static List<Takmicar> l;

    public static void setPomLista(List<Takmicar> pomLista) {
        //To change body of generated methods, choose Tools | Templates.
        l = pomLista;
    }

    /**
     * Creates new form DflPDF
     */
    public DflPDF(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("KREIRAJ PDF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        setSize(new java.awt.Dimension(416, 339));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("test3333.pdf");

            PDF pdf = new PDF(fos);
            Page page = new Page(pdf, Letter.PORTRAIT);

            Font f1 = new Font(pdf, CoreFont.HELVETICA_BOLD);
            f1.setSize(7.0f);

            Font f2 = new Font(pdf, CoreFont.HELVETICA);
            f2.setSize(7.0f);

            Font f3 = new Font(pdf, CoreFont.HELVETICA_BOLD_OBLIQUE);
            f3.setSize(7.0f);

            Table table = new Table();
            List<List<Cell>> tableData = getData(f1, f2);
            table.setData(tableData);
            table.setPosition(70.0f, 30.0f);
            
            
//            table.setTextColorInRow(6, Color.blue);
//            table.setTextColorInRow(39, Color.red);
            table.setFontInRow(0, f3);
            table.setTextColorInRow(0, Color.blue);
//            table.removeLineBetweenRows(0, 1);
            table.autoAdjustColumnWidths();
//            table.setColumnWidth(0, 120.0f);
//            table.rightAlignNumbers();
            int numOfPages = table.getNumberOfPages(page);
            while (true) {
                Point point = table.drawOn(page);
                // TO DO: Draw "Page 1 of N" here
                if (!table.hasMoreData()) {
                    // Allow the table to be drawn again later:
                    table.resetRenderedPagesCount();
                    break;
                }
                page = new Page(pdf, Letter.PORTRAIT);
            }

            pdf.flush();
            fos.close();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public List<List<Cell>> getData(
            Font f1,
            Font f2) throws Exception {

        List<List<Cell>> tableData = new ArrayList<List<Cell>>();
        if (l == null) {
            l = new ArrayList<>();
        }
        List<Cell> row1 = new ArrayList<Cell>();
        row1.add(new Cell(f1, "IME"));
        row1.add(new Cell(f1, "PREZIME"));
        row1.add(new Cell(f1, "BROJ POBEDA"));
        row1.add(new Cell(f1, "BROJ IZGUBLJENIH"));
        row1.add(new Cell(f1, "MESTO"));

        tableData.add(row1);

        int currentRow = 0;
        for (Takmicar t : l) {
            List<Cell> row = new ArrayList<Cell>();
            String[] cols = null;
//            String text = t.getBroj_pobeda()+" "+ 
            row.add(new Cell(f1, t.getIme()));
            row.add(new Cell(f1, t.getPrezime()));
            row.add(new Cell(f1, String.valueOf(t.getBroj_pobeda())));
            row.add(new Cell(f1, String.valueOf(t.getBroj_izgubljenih())));
            row.add(new Cell(f1, t.getMesto().getNaziv()));
            tableData.add(row);
            currentRow++;
        }

//        appendMissingCells(tableData, f2);
        return tableData;
    }

    private void appendMissingCells(List<List<Cell>> tableData, Font f2) {
        List<Cell> firstRow = tableData.get(0);
        int numOfColumns = firstRow.size();
        for (int i = 0; i < tableData.size(); i++) {
            List<Cell> dataRow = tableData.get(i);
            int dataRowColumns = dataRow.size();
            if (dataRowColumns < numOfColumns) {
                for (int j = 0; j < (numOfColumns - dataRowColumns); j++) {
                    dataRow.add(new Cell(f2));
                }
                dataRow.get(dataRowColumns - 1).setColSpan((numOfColumns - dataRowColumns) + 1);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DflPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DflPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DflPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DflPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DflPDF dialog = new DflPDF(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

    private String vratiTextOTabeli() {
        String pdf = "";

        for (Takmicar t : l) {
            pdf += t.getIme() + " " + t.getPrezime() + "        " + t.getBroj_pobeda() + "\n";
        }
        return pdf;
    }
}
